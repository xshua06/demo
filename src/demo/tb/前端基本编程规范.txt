====== 前端基本编程规范 ======

软件的长期价值直接源于其编码质量。在它的整个生命周期里，一个程序可能会被许多人阅读或修改。如果一个程序可以清晰的展现出它的结构和特征，那就能减少在以后对其进行修改时出错的可能性。

编程规范可以帮助程序员们增加程序的健壮性。所有前端代码都是暴露给公众的，所以我们更应该保证其质量。这非常重要。

遵守规范的同时，任何增强可读性的改进都是欢迎的：
<html>
<p class="notetip" style="margin-left: 0">
Any violation to this guide is allowed if it enhances readability. <br />
如果能增强代码的可读性，对本规范的任何违背都是容许的。 
</p>
</html>

有任何疑问或建设性意见，请联系 [[mailto:yubo@taobao.com|玉伯]] 或 [[mailto:xiaoma@taobao.com|小马]]。


===== 文件命名规范 =====

  - **一律小写，必须是英文单词或产品名称的拼音，多个单词用下划线（_）连接**。只能出现英文字母、数字、下划线和连字符（-）。
  - 连字符（-）的使用场景为：英文单词中的组合词，比如thunder-like_delivery_48x48.png. 除此之外，都使用下划线连接。
  - 文件名中的版本号，需要用字母v做为前缀，小版本用英文字母[a-z]表示，比如address_and_postage_v2a.js.
  - 该命名规范适用于html, css, js, swf, php, xml, png, gif, jpg, ico等前端维护的所有文件类型。
  - tbsp和tbra目录下的文件名沿用YUI的命名规则，特殊处理，不要仿效。


===== 文件编码约定 =====

前端开发涉及的所有文本文件请**统一采用GB2312, GBK或GB18030编码**。

由于历史原因，目前严禁使用UTF-8编码。
===== id和class命名规范 =====
 
  - id和class的命名总规则为：**内容优先，表现为辅**。首先根据内容来命名，比如main-nav. 如果根据内容找不到合适的命名，可以再结合表现来定，比如skin-blue, present-tab, col-main.
  - id和class名称一律小写，多个单词用连字符连接，比如recommend-presents.
  - id和class名称中只能出现小写的26个英文字母、数字和连字符（-），任何其它字符都严禁出现。
  - id和class**尽量用英文单词命名**。确实找不到合适的单词时，可以考虑使用产品的中文拼音，比如wangwang, dating. 对于中国以及淘宝特色词汇，也可以使用拼音，比如xiaobao, daigou. 除了产品名称和特色词汇，其它任何情况下都严禁使用拼音。
  - 在不影响语义的情况下，id和class名称中可以适当采用英文单词缩写，比如col, nav, hd, bd, ft等，但切忌自造缩写。
  - id和class名称中的第一个词必须是单词全拼或语义非常清晰的单词缩写，比如present, col.
  - 仅在JavaScript中当作hook用的id和class, 命名规则为J_UpperCamelCase（请注意，J_ 后的首字母也大写！）, 其中字母J代表JavaScript, 也是钩子（hook）的象形。注意：如果在JavaScript和CSS中都需要用到，则不用遵守本约定。
  - 在自动化测试脚本中当作hook用的class, 命名规则为T_UpperCamelCase, 其中字母T代表Test.


===== 缩进和行长 =====

  * 缩进的单位为四个空格。如果使用Tab键来缩进，请在编辑器中设定Tab的长度为四个空格。
  * 避免每行超过120个字符。当一条语句一行写不下时，请折行。


===== 注释 =====

  - **不要吝啬注释**。给以后需要理解你的代码的人们（或许就是你自己）留下信息是非常有用的。注释应该和它们所注释的代码一样是书写良好且清晰明了。偶尔的小幽默就更不错了。记得要避免冗长或者情绪化。
  - **及时地更新注释也很重要**。错误的注释会让程序更加难以阅读和理解。
  - **要让注释有意义**。重点在解释那些不容易立即明白的逻辑上。不要把读者的时间浪费在显而易见的代码上，例如：<code javascript>
i = 0;  // 让 i 等于 0 * bad</code>


===== 其它建议 =====

下面是一些零散建议，虽然不同于上面的硬性规范，但依旧希望大家在工作中能尽量去做到。保持良好的编程习惯很重要。

  * 尽量遵守内容（Content）、表现（Presentation）和行为（Behavior）的分离原则。
  * 书写HTML文档时，尽量符合语义，**要让正确的元素表达正确的事**。比如：严禁用table进行布局，但是，在展现数据时，该用table的时候就大胆的用。
  * 推荐用双引号引用HTML文档中的属性值。推荐用单引号引用css和js语句中的字符串。
  * 尽量做到性能优化，遵守[[http://developer.yahoo.com/performance/rules.html|Best Practices for Speeding Up Your Web Site]].

<html>
<p class="noteimportant">
最后，非常感谢你的仔细阅读！<br />
规范最重要的是执行。希望此规范，能有助于你在团队中的工作。<br />
有任何改进建议，请随时联系玉伯。
</p>
</html>

{{tag>f2e 前端规范}}